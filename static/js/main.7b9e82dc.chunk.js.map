{"version":3,"sources":["components/Menu/Menu.js","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","components/ProductList/ProductList.js","components/ProductItem/ProductItem.js","constants/Config.js","utils/apiCaller.js","actions/index.js","constants/ActionTypes.js","pages/ProductListPage/ProductListPage.js","pages/ProductActionPage/ProductActionPage.js","routes.js","App.js","serviceWorker.js","reducers/products.js","reducers/itemEditing.js","reducers/index.js","index.js"],"names":["menus","name","to","exact","MenuLink","_ref","label","activeOnlyWhenExact","react_default","a","createElement","react_router","path","children","_ref2","active","match","className","react_router_dom","Menu","showMenus","result","length","map","menu","index","Menu_MenuLink","key","this","Component","HomePage","NotFoundPage","ProductList","props","ProductItem","onDelete","id","confirm","_this","_this2","_this$props","product","statusName","status","statusClass","price","concat","type","onClick","API_URL","callApl","endpoint","method","arguments","undefined","body","axios","url","Config","data","catch","err","console","log","actFetchProducts","products","actDeleteProduct","actAddProduct","actGetProduct","actUpdateProduct","ProductListPage","onDeleteProduct","showProducts","components_ProductItem_ProductItem","fetchAllProducts","components_ProductList_ProductList","connect","state","dispatch","callApi","then","res","actDeleteProductRequest","ProductActionPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","target","value","checked","setState","defineProperty","onSave","preventDefault","_this$state","txtName","txtPrice","ckbStatus","history","alert","onUpdateProduct","onAddProduct","goBack","params","onEditProduct","nextProps","itemEditing","_this$state2","onSubmit","actAddProductRequest","actGetProductRequest","actUpdateProducttRequest","routes","main","pages_HomePage_HomePage","pages_ProductListPage_ProductListPage","pages_ProductActionPage_ProductActionPage","pages_NotFoundPage_NotFoundPage","App","showContent","route","component","components_Menu_Menu","Boolean","window","location","hostname","initialState","findIndex","forEach","action","toConsumableArray","splice","push","appReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b9e82dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nconst menus = [\r\n    {\r\n        name: 'Trang Chủ',\r\n        to: '/',\r\n        exact: true\r\n    },\r\n    {\r\n        name: 'Quản lý sản phẩm',\r\n        to: '/product-list',\r\n        exact: false\r\n    }\r\n];\r\n\r\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\r\n    return (\r\n        <Route\r\n            path={to}\r\n            exact={activeOnlyWhenExact}\r\n            children={\r\n                ({ match }) => {\r\n                    var active = match ? 'active' : '';\r\n                    return (\r\n                        <li className={active}>\r\n                            <Link to={to}>\r\n                                {label}\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                }\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-inverse\">\r\n                    <Link to=\"/\" className=\"navbar-brand\"><i className=\"fa fa-home\"></i></Link>\r\n                    <ul className=\"nav navbar-nav\">\r\n                        { this.showMenus(menus) }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n    showMenus = (menus) => {\r\n        var result = null;\r\n        if (menus.length > 0) {\r\n            result = menus.map((menu, index) => {\r\n                return (\r\n                    <MenuLink\r\n                        key={index}\r\n                        label={menu.name}\r\n                        to={menu.to}\r\n                        activeOnlyWhenExact={menu.exact}\r\n                    />\r\n                )\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\n\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Trang chu</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFoundPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"text-danger text-center\"><b>404 - Page Not Found</b></h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React, { Component } from 'react';\r\n\r\nclass ProductList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-primary\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Danh sách sản phẩm</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <table className=\"table table-hover table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Mã SP</th>\r\n                                <th>Tên</th>\r\n                                <th>Giá</th>\r\n                                <th>Trạng thái</th>\r\n                                <th>Hành động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { this.props.children }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProductItem extends Component {\r\n    onDelete = (id) => {\r\n        if(confirm('Bạn có chắc chắn muốn xóa ?')) { //eslint-disable-line\r\n            this.props.onDelete(id);\r\n        }\r\n    }\r\n    render() {\r\n        var { product, index } = this.props;\r\n        var statusName = product.status ? 'Còn hàng' : 'Hết hàng';\r\n        var statusClass = product.status ? 'warning' : 'default';\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{product.id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>\r\n                    <span className={`label label-${statusClass}`}>\r\n                        {statusName}\r\n                    </span>\r\n                </td>\r\n                <td>\r\n                    <Link\r\n                        to={`/product/edit/${product.id}`}\r\n                        className=\"btn btn-info mr-10\"\r\n                    >\r\n                        <i className=\"fa fa-edit\"></i>\r\n                    </Link>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        onClick={ () => this.onDelete(product.id) }\r\n                    >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductItem;\r\n","export const API_URL = 'https://5ca813f88e58df0014603a8e.mockapi.io/api/v1';","import axios from 'axios';\r\nimport * as Config from './../constants/Config';\r\n\r\nexport default function callApl(endpoint, method = 'GET', body) {\r\n    return axios({\r\n        method: method,\r\n        url: `${Config.API_URL}/${endpoint}`,\r\n        data: body\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n}","import * as Types from './../constants/ActionTypes';\r\nimport callApi from './../utils/apiCaller';\r\n\r\nexport const actFetchProductsRequest = () => {\r\n    return (dispatch) => {\r\n        return callApi('product', 'GET', null).then(res => {\r\n            dispatch(actFetchProducts(res.data))\r\n        });\r\n    }\r\n}\r\nexport const actFetchProducts = (products) => {\r\n    return {\r\n        type: Types.FETCH_PRODUCTS,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actDeleteProductRequest = (id) => {\r\n    return dispatch => {\r\n        return callApi(`product/${id}`, 'DELETE', null).then(res => {\r\n            dispatch(actDeleteProduct(id))\r\n        });\r\n    }\r\n}\r\nexport const actDeleteProduct = (id) => {\r\n    return {\r\n        type: Types.DELETE_PRODUCT,\r\n        id\r\n    }\r\n}\r\n\r\nexport const actAddProductRequest = (product) => {\r\n    return (dispatch) => {\r\n        return callApi('product', 'POST', product).then(res => {\r\n            dispatch(actAddProduct(res.data))\r\n        });\r\n    }\r\n}\r\nexport const actAddProduct = (product) => {\r\n    return {\r\n        type: Types.ADD_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actGetProductRequest = (id) => {\r\n    return (dispatch) => {\r\n        return  callApi(`product/${id}`, 'GET', null).then(res => {\r\n            dispatch(actGetProduct(res.data))\r\n        });\r\n    }\r\n}\r\nexport const actGetProduct = (product) => {\r\n    return {\r\n        type: Types.EDIT_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actUpdateProducttRequest = (product) => {\r\n    return (dispatch) => {\r\n        callApi(`product/${product.id}`, 'PUT', product).then(res => {\r\n            dispatch(actUpdateProduct(res.data))\r\n        });\r\n    }\r\n}\r\nexport const actUpdateProduct = (product) => {\r\n    return {\r\n        type: Types.UPDATE_PRODUCT,\r\n        product\r\n    }\r\n}","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';","import React, { Component } from 'react';\r\nimport ProductList from './../../components/ProductList/ProductList';\r\nimport ProductItem from './../../components/ProductItem/ProductItem';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { actFetchProductsRequest, actDeleteProductRequest } from './../../actions/index';\r\n\r\nclass ProductListPage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllProducts();\r\n    }\r\n    onDelete = (id) => {\r\n        this.props.onDeleteProduct(id);\r\n    }\r\n\r\n    render() {\r\n        var { products } = this.props;\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n\r\n                <Link to=\"/product/add\" className=\"btn btn-primary\">\r\n                    Thêm sản phẩm\r\n                </Link>\r\n\r\n                <hr />\r\n                <ProductList>\r\n                    {this.showProducts(products)}\r\n                </ProductList>\r\n            </div>\r\n        );\r\n    }\r\n    showProducts = (products) => {\r\n        var result = null;\r\n        if (products.length > 0) {\r\n            result = products.map((product, index) => {\r\n                return (\r\n                    <ProductItem\r\n                        key={index}\r\n                        product={product}\r\n                        index={index}\r\n                        onDelete={this.onDelete}\r\n                    />\r\n                )\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        fetchAllProducts: () => {\r\n            dispatch(actFetchProductsRequest());\r\n        },\r\n        onDeleteProduct: (id) => {\r\n            dispatch(actDeleteProductRequest(id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListPage);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { actAddProductRequest, actGetProductRequest, actUpdateProducttRequest } from './../../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProductActionPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            txtName: '',\r\n            txtPrice: '',\r\n            ckbStatus: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        var { match } = this.props;\r\n        if (match) {\r\n            var id = match.params.id;\r\n            this.props.onEditProduct(id);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.itemEditing) {\r\n            var { itemEditing } = nextProps;\r\n            this.setState({\r\n                id: itemEditing.id,\r\n                txtName: itemEditing.name,\r\n                txtPrice: itemEditing.price,\r\n                ckbStatus: itemEditing.status\r\n            });\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    onSave = (e) => {\r\n        e.preventDefault();\r\n        var { id, txtName, txtPrice, ckbStatus } = this.state;\r\n        var { history } = this.props;\r\n        var product = {\r\n            id: id,\r\n            name: txtName,\r\n            price: txtPrice,\r\n            status: ckbStatus\r\n        };\r\n        if (txtName === '' || txtPrice === '') return alert('Vui lòng nhập dữ liệu !');\r\n        if (id) {\r\n            this.props.onUpdateProduct(product);\r\n        } else {\r\n            this.props.onAddProduct(product);\r\n        }\r\n        history.goBack();\r\n    }\r\n    render() {\r\n        var { txtName, txtPrice, ckbStatus } = this.state;\r\n        return (\r\n            <div className=\"col-md-offset-3 col-md-6\">\r\n                <form onSubmit={this.onSave}>\r\n                    <div className=\"form-group\">\r\n                        <label>Tên sản phẩm</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"txtName\"\r\n                            value={txtName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Giá</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"txtPrice\"\r\n                            value={txtPrice}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"checkbox\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"ckbStatus\"\r\n                                    value={ckbStatus}\r\n                                    onChange={this.onChange}\r\n                                    checked={ckbStatus}\r\n                                />\r\n                                Còn hàng\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        <i className=\"fa fa-save\"></i> Lưu\r\n                    </button>\r\n\r\n                    <Link to=\"/product-list\" className=\"btn btn-warning\">\r\n                        <i className=\"fa fa-repeat\"></i> Trở lại\r\n                    </Link>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapMapToProps = state => {\r\n    return {\r\n        itemEditing: state.itemEditing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onAddProduct: (product) => {\r\n            dispatch(actAddProductRequest(product));\r\n        },\r\n        onEditProduct: (id) => {\r\n            dispatch(actGetProductRequest(id));\r\n        },\r\n        onUpdateProduct: (product) => {\r\n            dispatch(actUpdateProducttRequest(product));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapMapToProps, mapDispatchToProps)(ProductActionPage);\r\n","import React from 'react';\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\r\nimport ProductListPage from './pages/ProductListPage/ProductListPage';\r\nimport ProductActionPage from './pages/ProductActionPage/ProductActionPage';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: () => <HomePage />\r\n    },\r\n    {\r\n        path: '/product-list',\r\n        exact: false,\r\n        main: () => <ProductListPage />\r\n    },\r\n    {\r\n        path: '/product/add',\r\n        exact: false,\r\n        main: ({history}) => <ProductActionPage history={history} />\r\n    },\r\n    {\r\n        path: '/product/edit/:id',\r\n        exact: false,\r\n        main: ({match, history}) => <ProductActionPage match={match} history={history} />\r\n    },\r\n    {\r\n        path: '',\r\n        exact: false,\r\n        main: () => <NotFoundPage />\r\n    }\r\n];\r\n\r\nexport default routes","import React, { Component } from 'react';\nimport './Style.css';\nimport Menu from './components/Menu/Menu';\nimport routes from './routes';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"wrapper\">\n                    <Menu />\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {this.showContent(routes)}\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n\n    showContent = (routes) => {\n        var result = null;\n        if (routes.length > 0) {\n            result = routes.map((route, index) => {\n                return (\n                    <Route\n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.main}\n                    />\n                )\n            });\n        }\n        return <Switch>{result}</Switch>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from './../constants/ActionTypes';\r\nvar initialState = [];\r\n\r\nvar findIndex = (products, id) => {\r\n    var result = -1;\r\n    products.forEach((product, index) => {\r\n        if (product.id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nconst products = (state = initialState, action) => {\r\n    var index = -1;\r\n    var { id, product } = action;\r\n    switch (action.type) {\r\n        case Types.FETCH_PRODUCTS:\r\n            state = action.products;\r\n            return [...state];\r\n\r\n        case Types.DELETE_PRODUCT:\r\n            index = findIndex(state, id);\r\n            state.splice(index, 1);\r\n            return [...state];\r\n        \r\n        case Types.ADD_PRODUCT:\r\n            state.push(action.product);\r\n            return [...state];\r\n        \r\n        case Types.UPDATE_PRODUCT:\r\n            index = findIndex(state, product.id);\r\n            state[index] = product;\r\n            return [...state];\r\n\r\n        default: return [...state];\r\n    }\r\n}\r\n\r\nexport default products;","import * as Types from './../constants/ActionTypes'\r\n\r\nvar initialState = {};\r\n\r\nconst itemEditing = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.EDIT_PRODUCT:\r\n            return action.product;\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default itemEditing;","import { combineReducers } from 'redux';\r\nimport products from './products';\r\nimport itemEditing from './itemEditing';\r\n\r\nconst appReducers = combineReducers({\r\n    products,\r\n    itemEditing\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducers from './reducers/index';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    appReducers,\n    applyMiddleware(thunk)\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}